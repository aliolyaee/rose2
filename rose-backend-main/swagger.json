{
  "openapi": "3.0.0",
  "paths": {
    "/user/signup": {
      "post": {
        "operationId": "AuthController_signup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/SignupDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/user/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth"
        ]
      }
    },
    "/user/set-admin/{id}": {
      "post": {
        "operationId": "AuthController_setUserAdmin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/user/last-login": {
      "get": {
        "operationId": "AuthController_lastLoginDate",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/admin/users": {
      "post": {
        "operationId": "UserController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "get": {
        "operationId": "UserController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/admin/users/{id}": {
      "get": {
        "operationId": "UserController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "patch": {
        "operationId": "UserController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "User"
        ]
      },
      "delete": {
        "operationId": "UserController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/tables": {
      "post": {
        "operationId": "TablesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateTableDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTableDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Tables"
        ]
      },
      "get": {
        "operationId": "TablesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Tables"
        ]
      }
    },
    "/tables/{id}": {
      "get": {
        "operationId": "TablesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Tables"
        ]
      },
      "patch": {
        "operationId": "TablesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTableDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTableDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Tables"
        ]
      },
      "delete": {
        "operationId": "TablesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Tables"
        ]
      }
    },
    "/image": {
      "post": {
        "operationId": "ImageController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "alt": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "name",
                  "image"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "alt": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "name",
                  "image"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "images"
        ]
      },
      "get": {
        "operationId": "ImageController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "images"
        ]
      }
    },
    "/image/{id}": {
      "get": {
        "operationId": "ImageController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "images"
        ]
      },
      "patch": {
        "operationId": "ImageController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "alt": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "alt": {
                    "type": "string"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "images"
        ]
      },
      "delete": {
        "operationId": "ImageController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "images"
        ]
      }
    },
    "/reservations/available": {
      "get": {
        "description": "Returns tables that match capacity and **do not** conflict with existing reservations for the given date, hour, and duration. Scope by restaurantId.",
        "operationId": "ReservationController_checkAvailability",
        "parameters": [
          {
            "name": "date",
            "required": true,
            "in": "query",
            "schema": {
              "example": "2025-08-23",
              "type": "string"
            }
          },
          {
            "name": "hour",
            "required": true,
            "in": "query",
            "schema": {
              "example": "19:30",
              "type": "string"
            }
          },
          {
            "name": "duration",
            "required": true,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 3,
              "example": 2,
              "type": "number"
            }
          },
          {
            "name": "people",
            "required": true,
            "in": "query",
            "schema": {
              "minimum": 1,
              "example": 4,
              "type": "number"
            }
          },
          {
            "name": "restaurantId",
            "required": true,
            "in": "query",
            "description": "شناسه رستوران انتخاب‌شده",
            "schema": {
              "example": 12,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of available tables",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AvailableTableSwagger"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid date/time or missing parameters"
          },
          "404": {
            "description": "No tables found for the criteria"
          }
        },
        "summary": "List available tables",
        "tags": [
          "reservations"
        ]
      }
    },
    "/reservations/create": {
      "post": {
        "description": "Creates a reservation if the selected table is available for the requested time window. Returns a tracking code.",
        "operationId": "ReservationController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateReservationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Reservation created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateReservationResponseSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed or table not available / past time"
          }
        },
        "summary": "Create reservation",
        "tags": [
          "reservations"
        ]
      }
    },
    "/reservations": {
      "get": {
        "description": "Lists reservations with optional filters (search, createdAfter, createdBefore). Returns Jalali-formatted createdAt.",
        "operationId": "ReservationController_listReservations",
        "parameters": [
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "جستجو بر اساس شماره تلفن یا کد پیگیری",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdAfter",
            "required": false,
            "in": "query",
            "description": "ایجاد شده بعد از این تاریخ (YYYY-MM-DD)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBefore",
            "required": false,
            "in": "query",
            "description": "ایجاد شده قبل از این تاریخ (YYYY-MM-DD)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of reservations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdminReservationSwagger"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing/invalid authentication"
          },
          "403": {
            "description": "Insufficient role (Admin required)"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "Authorization": []
          }
        ],
        "summary": "Admin - list reservations",
        "tags": [
          "reservations"
        ]
      }
    },
    "/reservations/{id}": {
      "get": {
        "operationId": "ReservationController_findOneForAdmin",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "example": 101,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reservation details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminReservationSwagger"
                }
              }
            }
          },
          "401": {
            "description": "Missing/invalid authentication"
          },
          "403": {
            "description": "Insufficient role (Admin required)"
          },
          "404": {
            "description": "Reservation not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "Authorization": []
          }
        ],
        "summary": "Admin - get reservation by ID",
        "tags": [
          "reservations"
        ]
      },
      "patch": {
        "operationId": "ReservationController_updateReservation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "example": 101,
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReservationDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReservationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated reservation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminReservationSwagger"
                }
              }
            }
          },
          "400": {
            "description": "Validation failed"
          },
          "401": {
            "description": "Missing/invalid authentication"
          },
          "403": {
            "description": "Insufficient role (Admin required)"
          },
          "404": {
            "description": "Reservation not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "Authorization": []
          }
        ],
        "summary": "Admin - update reservation",
        "tags": [
          "reservations"
        ]
      },
      "delete": {
        "operationId": "ReservationController_deleteReservation",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "example": 101,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reservation deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "message": "رزرو با موفقیت حذف شد."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Missing/invalid authentication"
          },
          "403": {
            "description": "Insufficient role (Admin required)"
          },
          "404": {
            "description": "Reservation not found"
          }
        },
        "security": [
          {
            "bearer": []
          },
          {
            "Authorization": []
          }
        ],
        "summary": "Admin - delete reservation",
        "tags": [
          "reservations"
        ]
      }
    },
    "/menu/items": {
      "post": {
        "operationId": "MenuController_createMenuItem",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateMenuItemDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMenuItemDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Menu"
        ]
      },
      "get": {
        "operationId": "MenuController_getMenuItems",
        "parameters": [
          {
            "name": "restaurantId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "category",
            "required": false,
            "in": "query",
            "schema": {
              "example": "1",
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "example": "string",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Menu"
        ]
      }
    },
    "/menu/items/{id}": {
      "get": {
        "operationId": "MenuController_findMenuItemById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Menu"
        ]
      },
      "patch": {
        "operationId": "MenuController_updateMenuItem",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMenuItemDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMenuItemDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Menu"
        ]
      },
      "delete": {
        "operationId": "MenuController_removeMenuItem",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Menu"
        ]
      }
    },
    "/menu/categories": {
      "post": {
        "operationId": "MenuController_createCategory",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Menu"
        ]
      },
      "get": {
        "operationId": "MenuController_getAllCategories",
        "parameters": [
          {
            "name": "restaurantId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Menu"
        ]
      }
    },
    "/menu/categories/{id}": {
      "get": {
        "operationId": "MenuController_findCategoryById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Menu"
        ]
      },
      "patch": {
        "operationId": "MenuController_updateCategory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Menu"
        ]
      },
      "delete": {
        "operationId": "MenuController_removeCategory",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Menu"
        ]
      }
    },
    "/menu/items/category/{id}": {
      "get": {
        "operationId": "MenuController_getItemsByCategoryId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Menu"
        ]
      }
    },
    "/orders/place": {
      "post": {
        "operationId": "OrderController_placeOrder",
        "parameters": [
          {
            "name": "x-session-id",
            "in": "header",
            "description": "Session ID for the cart",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PlaceOrderDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Order"
        ]
      }
    },
    "/orders": {
      "get": {
        "operationId": "OrderController_getOrders",
        "parameters": [
          {
            "name": "phone",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Order"
        ]
      }
    },
    "/cart/add": {
      "post": {
        "operationId": "CartController_addItem",
        "parameters": [
          {
            "name": "x-session-id",
            "in": "header",
            "description": "Session ID for the cart",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AddToCartDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddToCartDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Cart"
        ]
      }
    },
    "/cart/add-multiple": {
      "post": {
        "operationId": "CartController_addMultiple",
        "parameters": [
          {
            "name": "x-session-id",
            "in": "header",
            "description": "Session ID for the cart",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AddMultipleItemsDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMultipleItemsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Cart"
        ]
      }
    },
    "/cart": {
      "get": {
        "operationId": "CartController_getCart",
        "parameters": [
          {
            "name": "x-session-id",
            "in": "header",
            "description": "Session ID for the cart",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Cart"
        ]
      }
    },
    "/cart/remove/{id}": {
      "delete": {
        "operationId": "CartController_removeItem",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "x-session-id",
            "in": "header",
            "description": "Session ID for the cart",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Cart"
        ]
      }
    },
    "/cart/clear": {
      "delete": {
        "operationId": "CartController_clearCart",
        "parameters": [
          {
            "name": "x-session-id",
            "in": "header",
            "description": "Session ID for the cart",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Cart"
        ]
      }
    },
    "/admin/orders": {
      "get": {
        "operationId": "OrderAdminController_findAll",
        "parameters": [
          {
            "name": "phone",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "OrderAdmin"
        ]
      }
    },
    "/admin/orders/{id}": {
      "get": {
        "operationId": "OrderAdminController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "OrderAdmin"
        ]
      },
      "delete": {
        "operationId": "OrderAdminController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "OrderAdmin"
        ]
      }
    },
    "/resturants": {
      "post": {
        "operationId": "ResturantsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateResturantDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Resturants"
        ]
      }
    },
    "/resturants/{id}": {
      "get": {
        "operationId": "ResturantsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Resturants"
        ]
      },
      "patch": {
        "operationId": "ResturantsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateResturantDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Resturants"
        ]
      },
      "delete": {
        "operationId": "ResturantsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Resturants"
        ]
      }
    }
  },
  "info": {
    "title": "YouTaab API",
    "description": "API for coffeshop reservation and menu",
    "version": "0.0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "Authorization": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "in": "header"
      }
    },
    "schemas": {
      "SignupDto": {
        "type": "object",
        "properties": {
          "fullname": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "confirm_password": {
            "type": "string"
          }
        },
        "required": [
          "fullname",
          "username",
          "password",
          "confirm_password"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "confirm_password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "example": "admin",
            "enum": [
              "admin",
              "user"
            ]
          }
        },
        "required": [
          "fullName",
          "username",
          "password",
          "confirm_password"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "confirm_password": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "example": "admin",
            "enum": [
              "admin",
              "user"
            ]
          }
        }
      },
      "CreateTableDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "capacity": {
            "type": "number"
          },
          "photo": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "description",
          "capacity",
          "photo"
        ]
      },
      "UpdateTableDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "capacity": {
            "type": "number"
          },
          "photo": {
            "type": "string"
          }
        }
      },
      "AvailableTableSwagger": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 17
          },
          "name": {
            "type": "string",
            "example": "Table A1"
          },
          "capacity": {
            "type": "number",
            "example": 4,
            "minimum": 1
          },
          "description": {
            "type": "string",
            "example": "Window side",
            "nullable": true
          },
          "photo": {
            "type": "string",
            "example": "https://cdn.example.com/tables/a1.jpg"
          },
          "restaurantId": {
            "type": "number",
            "example": 12,
            "description": "Restaurant ID"
          }
        },
        "required": [
          "id",
          "name",
          "capacity"
        ]
      },
      "CreateReservationResponseSwagger": {
        "type": "object",
        "properties": {
          "trackingCode": {
            "type": "string",
            "example": "AB12CD34",
            "description": "Tracking code of the reservation"
          }
        },
        "required": [
          "trackingCode"
        ]
      },
      "AdminReservationSwagger": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 101
          },
          "date": {
            "type": "string",
            "example": "2025-08-23"
          },
          "hour": {
            "type": "string",
            "example": "19:30"
          },
          "duration": {
            "type": "number",
            "example": 2
          },
          "people": {
            "type": "number",
            "example": 4
          },
          "phone": {
            "type": "string",
            "example": "09123456789"
          },
          "trackingCode": {
            "type": "string",
            "example": "AB12CD34"
          },
          "description": {
            "type": "string",
            "example": "توضیحات اختیاری",
            "nullable": true
          },
          "createdAtJalali": {
            "type": "string",
            "example": "1404-06-01 19:45",
            "description": "Jalali-formatted creation timestamp returned for admins"
          },
          "table": {
            "type": "object",
            "example": {
              "id": 17,
              "name": "Table A1",
              "capacity": 4
            },
            "description": "Joined table entity (partial)"
          }
        },
        "required": [
          "id",
          "date",
          "hour",
          "duration",
          "people",
          "phone",
          "trackingCode",
          "createdAtJalali"
        ]
      },
      "CreateReservationDto": {
        "type": "object",
        "properties": {
          "tableId": {
            "type": "number"
          },
          "date": {
            "type": "string"
          },
          "hour": {
            "type": "string"
          },
          "duration": {
            "type": "number"
          },
          "people": {
            "type": "number"
          },
          "phone": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "tableId",
          "date",
          "hour",
          "duration",
          "people",
          "phone",
          "fullName",
          "description"
        ]
      },
      "UpdateReservationDto": {
        "type": "object",
        "properties": {
          "tableId": {
            "type": "number"
          },
          "date": {
            "type": "string"
          },
          "hour": {
            "type": "string"
          },
          "duration": {
            "type": "number"
          },
          "people": {
            "type": "number"
          },
          "phone": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "CreateMenuItemDto": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "fee": {
            "type": "number"
          },
          "available": {
            "type": "boolean"
          },
          "categoryId": {
            "type": "number"
          }
        },
        "required": [
          "title",
          "fee",
          "categoryId"
        ]
      },
      "UpdateMenuItemDto": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "fee": {
            "type": "number"
          },
          "available": {
            "type": "boolean"
          },
          "categoryId": {
            "type": "number"
          }
        }
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Appetizers"
          },
          "icon": {
            "type": "string",
            "example": "utensils"
          },
          "restaurantId": {
            "type": "number",
            "example": 12,
            "description": "شناسه رستورانِ مربوط به این دسته‌بندی"
          }
        },
        "required": [
          "name",
          "icon",
          "restaurantId"
        ]
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Appetizers"
          },
          "icon": {
            "type": "string",
            "example": "utensils"
          }
        }
      },
      "PlaceOrderDto": {
        "type": "object",
        "properties": {
          "customerName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tableId": {
            "type": "number"
          }
        },
        "required": [
          "customerName",
          "phoneNumber",
          "description",
          "tableId"
        ]
      },
      "AddToCartDto": {
        "type": "object",
        "properties": {
          "menuItemId": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          }
        },
        "required": [
          "menuItemId",
          "quantity"
        ]
      },
      "AddMultipleItemsDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AddToCartDto"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "CreateResturantDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Restaurant name",
            "example": "Pizza Palace",
            "minLength": 1
          },
          "description": {
            "type": "string",
            "description": "Short description/bio of the restaurant",
            "example": "Authentic Italian with wood-fired ovens",
            "nullable": true
          },
          "tableIds": {
            "description": "Existing table IDs to attach to the restaurant",
            "example": [
              "c42d6e7e-3b49-4f8e-9a3a-1a3b8b6d1a22",
              "b5a9b0f1-76e2-4d28-9c33-0f5d3f7de111"
            ],
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateResturantDto": {
        "type": "object",
        "properties": {}
      }
    }
  }
}