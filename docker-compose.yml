version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: rose
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5433"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rose-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (NestJS)
  backend:
    build:
      context: ./rose-backend-main
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5433
      - DATABASE_NAME=rose
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
    env_file:
      - ./rose-backend-main/.env
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - rose-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Admin Panel (Next.js)
  admin-panel:
    build:
      context: ./admin-panel-main
      dockerfile: Dockerfile
    ports:
      - "3002:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://backend:3000
    env_file:
      - ./admin-panel-main/.env
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - rose-network

  # Hotel Frontend (Vite + React)
  hotel-frontend:
    build:
      context: ./rose-hotel-front-master
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://backend:3000
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - rose-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    restart: unless-stopped
    depends_on:
      - backend
      - admin-panel
      - hotel-frontend
    networks:
      - rose-network

volumes:
  postgres_data:
    driver: local

networks:
  rose-network:
    driver: bridge
