services:
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: rose
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rose-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./rose-backend-main
      dockerfile: Dockerfile
    ports:
      - "3005:3000"
    environment:
      NODE_ENV: production
      PORT: "3000"
      DB: rose
      DBHOST: postgres
      DBPORT: "5432"
      DBUSERNAME: postgres
      DBPASSWORD: postgres
      ACCESSTOKENJWT: c69fb1d897b2b67a8ee486af6c502d6fa93f66c0da428e23f45f2c5719b4944f
      REFRESHTOKENJWT: c69fb1d897b2b67a8ee486af6c502d6fa93f66c0da428e23f45f2c5719b4944f
      COOKIE_SECRET: c69fb1d897b2b67a8ee486af6c502d6fa93f66c0da428e23f45f2c5719b4944f
      OTP_TOKEN_SECRET: c69fb1d897b2b67a8ee486af6c502d6fa93f66c0da428e23f45f2c5719b4944f
      PHONE_SECRET_TOKEN: c69fb1d897b2b67a8ee486af6c502d6fa93f66c0da428e23f45f2c5719b4944f
      EMAIL_SECRET_TOKEN: c69fb1d897b2b67a8ee486af6c502d6fa93f66c0da428e23f45f2c5719b4944f
      SEND_SMS_URL: https://api.kavenegar.com/v1/{API_KEY}/verify/lookup.json
    env_file:
      - ./rose-backend-main/.env
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      rose-network:
        aliases: [rose-backend]
    healthcheck:
      # BusyBox wget is present; curl usually isn't in Node Alpine
      test: ["CMD-SHELL", "wget -q -O- http://localhost:3000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  admin-panel:
    build:
      context: ./admin-panel-main
    ports:
      - "3006:3006"
    environment:
      NODE_ENV: production
    env_file:
      - ./admin-panel-main/.env
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    networks:
      rose-network:
        aliases: [rose-admin]

  hotel-frontend:
    build:
      context: ./rose-hotel-front-master
    ports:
      - "3007:5000"
    environment:
      NODE_ENV: production
      VITE_API_URL: http://menu.baniantourism.com:3005
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    networks:
      rose-network:
        aliases: [rose-frontend]

volumes:
  postgres_data:

networks:
  rose-network:
    driver: bridge
